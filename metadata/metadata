#!/usr/bin/env bash
set -E -e -o pipefail

# Add repo specific metadata here.

BASE_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"

RELEASE_PACKAGE_NAME="Scrutiny"
RELEASE_TAG_PACKAGE_NAME="scrutiny"

UPSTREAM_PACKAGE_NAME="Scrutiny"
UPSTREAM_VERSION_CONFIG_KEY="SCRUTINY_VERSION"
UPSTREAM_GIT_REPO="https://github.com/AnalogJ/scrutiny"
GIT_REPO_TAGS_CUSTOM_FILTERING_REGEX='^v.+\-rc.+$'

TEST_TYPE="foreground"
TEST_CONTAINER_TYPE="scrutiny"

current_upstream_version() {
    get_config_arg ${UPSTREAM_VERSION_CONFIG_KEY:?}
}

latest_upstream_version() {
    git_remote_repo_latest_tag "${UPSTREAM_GIT_REPO:?}"
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    echo "Updating ${UPSTREAM_PACKAGE_NAME:?} ${UPSTREAM_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_VERSION_CONFIG_KEY:?}" "${latest_ver:?}"
    git add ${ARGS_FILE:?}
}

package_current_release_version() {
    current_upstream_version
}

test_start_container() {
    local collector_container_name="$(test_random_container_name)"
    local ui_container_name="$(test_random_container_name)"
    local influxdb_container_name="$(test_random_container_name)"

    echo "Starting influxdb container ${influxdb_container_name:?} ..."
    docker run \
        --name ${influxdb_container_name:?} \
        --detach \
        --rm \
        influxdb:2
    sleep 3

    echo "Starting Scrutiny UI container ${ui_container_name:?} ..."
    docker run \
        --name ${ui_container_name:?} \
        --detach \
        --rm \
        --env SCRUTINY_INFLUXDB_HOST="$(container_ip ${influxdb_container_name:?})" \
        --env SCRUTINY_INFLUXDB_PORT="8086" \
        ${IMAGE:?} \
        start-scrutiny ui
    sleep 3

    echo "Starting Scrutiny Collector container ${collector_container_name:?} ..."
    docker run \
        --name ${collector_container_name:?} \
        --detach \
        --rm \
        --env SCRUTINY_UI_API_ENDPOINT="http://$(container_ip ${ui_container_name:?}):8080" \
        ${IMAGE:?} \
        start-scrutiny collector 5sec
    sleep 30

    local failed="false"

    if [ "$(docker inspect -f '{{.State.Running}}' "${influxdb_container_name:?}" 2>/dev/null)" != "true" ]; then
        failed=true
        echo "Test Failed: Influxdb container is not running!"
    fi
    if [ "$(docker inspect -f '{{.State.Running}}' "${ui_container_name:?}" 2>/dev/null)" != "true" ]; then
        failed=true
        echo "Test Failed: Scrutiny UI container is not running!"
    fi
    if [ "$(docker inspect -f '{{.State.Running}}' "${collector_container_name:?}" 2>/dev/null)" != "true" ]; then
        failed=true
        echo "Test Failed: Scrutiny Collector container is not running!"
    fi

    test_cleanup_container "${collector_container_name:?}"
    test_cleanup_container "${ui_container_name:?}"
    test_cleanup_container "${influxdb_container_name:?}"
}
